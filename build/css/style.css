/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.layout {
  max-width: 1366px;
  margin: 0 auto;
  padding: 0 30px;
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto auto 1fr auto auto auto;
  grid-template-columns: 230px 1fr 230px;
  grid-template-areas: "header header header" "main-nav main-nav main-nav" "aside-left main aside-right" "banners banners banners" "bottom-nav bottom-nav bottom-nav" "footer footer footer"; }
  @media only screen and (max-width: 1365px) {
    .layout {
      padding: 0; } }
  @media only screen and (max-width: 1023px) {
    .layout {
      padding: 0 10px;
      grid-template-rows: auto auto auto auto 1fr auto auto auto;
      grid-template-columns: auto auto auto;
      grid-template-areas: "header header header" "main-nav main-nav main-nav" "aside-left aside-left aside-left" "aside-right aside-right aside-right" "main main main" "banners banners banners" "bottom-nav bottom-nav bottom-nav" "footer footer footer"; } }
  @media only screen and (max-width: 767px) {
    .layout {
      padding: 0; } }
  .layout__header {
    grid-area: header; }
  .layout__main-nav {
    grid-area: main-nav;
    margin-bottom: 20px; }
    @media only screen and (max-width: 1023px) {
      .layout__main-nav {
        margin-bottom: 10px; } }
  .layout__main {
    grid-area: main;
    padding: 0 50px; }
    @media only screen and (max-width: 1023px) {
      .layout__main {
        margin-top: 20px;
        padding: 0; } }
  @media only screen and (max-width: 1023px) {
    .layout__aside-wrapper.--hide {
      display: none; } }
  .layout__aside {
    background-color: rgba(0, 120, 191, 0.17);
    padding-top: 5px; }
    @media only screen and (max-width: 1023px) {
      .layout__aside {
        padding-top: 0;
        background-color: white; } }
    .layout__aside.--right {
      grid-area: aside-right; }
    .layout__aside.--left {
      grid-area: aside-left; }
  .layout__aside-switch {
    display: none; }
    @media only screen and (max-width: 1023px) {
      .layout__aside-switch {
        display: block; } }
  .layout__aside-switch-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: #0078bf;
    padding: 10px;
    text-transform: uppercase;
    color: #fff;
    font-size: 16px;
    font-weight: 900;
    cursor: pointer; }
  .layout__aside-switch-button {
    position: relative; }
    .layout__aside-switch-button::after {
      content: "";
      clip-path: polygon(0 0, 50% 100%, 100% 0);
      background-color: #fff;
      position: absolute;
      width: 20px;
      height: 20px;
      margin-left: 20px; }
    .layout__aside-switch-button.--open::after {
      transform: rotateX(180deg); }
  .layout__aside-visually {
    width: 47px;
    height: 35px; }
  .layout__banners {
    grid-area: banners;
    margin-top: 100px;
    margin-bottom: 20px;
    overflow: hidden; }
  .layout__bottom-nav {
    grid-area: bottom-nav;
    margin-bottom: 60px; }
  .layout__footer {
    grid-area: footer;
    background-color: #D9D9D9; }

* {
  box-sizing: border-box; }

html {
  font-size: 20px;
  font-family: "Inter Regular", sans-serif; }

h1 {
  font-size: 1.8rem; }

h2 {
  font-size: 1.6rem; }

h3 {
  font-size: 1.4rem; }

h4 {
  font-size: 1.2rem; }

h5 {
  font-size: 0.8rem; }

h6 {
  font-size: 0.6rem; }

ul {
  margin: 0; }

.hide {
  display: none; }

@font-face {
  font-family: "Inter Regular";
  font-style: normal;
  font-weight: normal;
  src: local("Inter Regular"), url("../fonts/Inter-Regular.ttf") format("ttf"); }

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px 20px 10px 20px; }
  @media only screen and (max-width: 767px) {
    .header {
      padding: 20px 10px; } }
  .header__title {
    padding: 0 15px;
    font-size: 32px;
    text-transform: uppercase;
    font-weight: 900;
    text-align: center;
    color: #09256f; }
    @media only screen and (max-width: 1366px) {
      .header__title {
        font-size: 24px; } }
    @media only screen and (max-width: 1365px) {
      .header__title {
        font-size: 24px; } }
    @media only screen and (max-width: 1023px) {
      .header__title {
        order: 2;
        text-align: center;
        font-size: 20px;
        margin: 0 10px; } }
    @media only screen and (max-width: 767px) {
      .header__title {
        font-size: 12px; } }
  @media only screen and (max-width: 1366px) {
    .header__logo {
      width: 70px; } }
  @media only screen and (max-width: 767px) {
    .header__logo {
      width: 50px; } }
  .header__burger {
    display: none;
    order: 3; }
    @media only screen and (max-width: 1023px) {
      .header__burger {
        display: block; } }

.header-nav {
  background-color: #0078bf; }
  @media only screen and (max-width: 1023px) {
    .header-nav.--hide {
      display: none; } }
  .header-nav__list {
    display: flex;
    justify-content: space-between;
    align-items: stretch;
    height: 100%;
    list-style: none;
    margin: 0;
    padding: 0; }
    @media only screen and (max-width: 1023px) {
      .header-nav__list {
        display: none; } }
    @media only screen and (max-width: 1023px) {
      .header-nav__list {
        display: block; } }
  .header-nav__item {
    display: flex;
    align-items: center;
    position: relative; }
    @media only screen and (max-width: 1023px) {
      .header-nav__item {
        display: block; } }
  .header-nav__item:hover .header-nav__sub-list {
    display: block; }
  .header-nav__link {
    display: block;
    padding: 23px 20px;
    font-size: 20px;
    font-weight: 300;
    text-align: center;
    text-decoration: none;
    transition: all ease-out .3s;
    color: #fff;
    cursor: pointer; }
    .header-nav__link:hover {
      text-decoration: underline; }
    @media only screen and (max-width: 1365px) {
      .header-nav__link {
        font-size: 16px; } }
    @media only screen and (max-width: 1023px) {
      .header-nav__link {
        padding: 23px 20px;
        font-size: 18px;
        font-weight: 900;
        text-align: left; } }
    @media only screen and (max-width: 1023px) {
      .header-nav__link.--visually {
        display: none; } }
  .header-nav__sub-list {
    display: none;
    list-style-type: none;
    position: absolute;
    top: 100%;
    left: 0;
    background-color: #fff;
    padding: 0;
    z-index: 999; }
    @media only screen and (max-width: 1023px) {
      .header-nav__sub-list {
        position: static;
        display: block;
        background-color: #0078bf; } }
  .header-nav__sub-item {
    padding-right: 10px;
    padding-left: 50px;
    position: relative;
    border-bottom: 1px #0078bf dotted; }
    .header-nav__sub-item:before {
      content: "";
      position: absolute;
      display: block;
      width: 15px;
      height: 15px;
      background-color: #0078bf;
      border-radius: 50%;
      top: 50%;
      left: 12px;
      transform: translateY(-50%); }
    @media only screen and (max-width: 1023px) {
      .header-nav__sub-item:before {
        background-color: #fff;
        width: 10px;
        height: 10px;
        left: 30px; } }
    .header-nav__sub-item:last-child {
      border-bottom: none; }
  .header-nav__sub-link {
    display: block;
    color: #09256f;
    text-decoration: none;
    font-size: 18px;
    font-weight: 900;
    padding: 20px;
    padding-left: 10px; }
    .header-nav__sub-link:hover {
      text-decoration: underline; }
    @media only screen and (max-width: 1023px) {
      .header-nav__sub-link {
        color: #fff;
        font-size: 18px;
        font-weight: 300; } }
  .header-nav__visually-impaired {
    width: 47px;
    height: 35px; }

.visually-impaired {
  width: 100%;
  height: 100%;
  display: block;
  background: url(../img/icons/eye.svg) center no-repeat;
  background-size: cover; }

.burger-btn {
  display: block;
  width: 50px;
  height: 50px;
  position: relative; }
  .burger-btn__line {
    position: absolute;
    top: 50%;
    margin-top: -2px;
    left: 50%;
    margin-left: -20px;
    width: 40px;
    height: 5px;
    background-color: #0078bf; }
    .burger-btn__line::after, .burger-btn__line::before {
      content: '';
      position: absolute;
      top: 50%;
      margin-top: -2px;
      width: 40px;
      height: 5px;
      background-color: #0078bf; }
    .burger-btn__line::after {
      transform: translateY(11px); }
    .burger-btn__line::before {
      transform: translateY(-12px); }
  .burger-btn.--open .burger-btn__line {
    transform: rotate(45deg); }
    .burger-btn.--open .burger-btn__line::after {
      transform: rotate(90deg); }
    .burger-btn.--open .burger-btn__line::before {
      transform: translateY(-8px);
      display: none; }

.side-bar {
  list-style: none;
  padding: 0; }
  .side-bar__link {
    font-size: 18px;
    color: black;
    display: block;
    text-decoration: none;
    font-weight: 400;
    text-align: center;
    padding: 22px 15px; }
    .side-bar__link:hover {
      text-decoration: underline; }
    @media only screen and (max-width: 1023px) {
      .side-bar__link {
        font-size: 16px;
        color: #09256F;
        font-weight: 900; } }

.news-list {
  height: 100%;
  position: relative; }
  .news-list__wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%; }
    @media only screen and (max-width: 1365px) {
      .news-list__wrapper {
        padding: 0 50px; } }
    @media only screen and (max-width: 1023px) {
      .news-list__wrapper {
        padding: 0; } }
    @media only screen and (max-width: 767px) {
      .news-list__wrapper {
        padding: 0 15px; } }
  .news-list__item {
    margin-bottom: 30px; }
    .news-list__item:last-child {
      margin-bottom: 0; }
  .news-list__all {
    display: block;
    text-align: center;
    text-decoration: none;
    font-size: 18px;
    font-weight: 400;
    color: #000;
    position: absolute;
    bottom: -70px;
    padding: 20px 0;
    width: 100%; }

.all-news {
  position: relative; }
  .all-news__wrapper {
    display: grid;
    justify-content: center;
    gap: 30px;
    grid-template-columns: repeat(auto-fit, 350px); }
  .all-news__pagination {
    position: absolute;
    left: 50%;
    bottom: -100px;
    transform: translateX(-50%); }

.news-article {
  box-shadow: 0px 7px 25px 10px #BDB6B6E3;
  padding: 25px 25px 15px 25px; }
  .news-article__title {
    font-size: 28px;
    font-weight: 700;
    display: block;
    margin: 0;
    margin-bottom: 5px;
    text-align: center; }
    .news-article__title.--small {
      font-size: 18px;
      font-weight: 700; }
  .news-article__image-wrapper {
    height: 200px;
    overflow: hidden; }
    .news-article__image-wrapper.--small {
      height: 150px; }
  .news-article__image {
    width: 100%;
    height: auto; }
  .news-article__text {
    font-size: 20px;
    font-weight: 300;
    text-align: left; }
    .news-article__text.--small {
      font-size: 16px; }
  .news-article__button-wrapepr {
    display: flex;
    justify-content: center; }
  .news-article__read-more {
    display: block;
    background-color: #D9D9D9;
    border: none;
    text-decoration: none;
    font-size: 20px;
    font-weight: 900;
    text-align: center;
    color: #000;
    padding: 5px 10px; }
    .news-article__read-more:hover {
      background-color: #b3b3b3; }
    .news-article__read-more.--small {
      font-size: 14px; }

.banners-list {
  position: relative; }
  .banners-list__item {
    display: flex;
    align-items: center;
    justify-content: center; }
  .banners-list__next {
    display: none;
    right: 0; }
    @media only screen and (max-width: 767px) {
      .banners-list__next {
        display: flex; } }
    .banners-list__next::after {
      content: "";
      width: 22px;
      height: 22px;
      background-color: #22318e;
      clip-path: polygon(0 0, 0 100%, 100% 50%); }
  .banners-list__prev {
    display: none;
    left: 0; }
    @media only screen and (max-width: 767px) {
      .banners-list__prev {
        display: flex; } }
    .banners-list__prev::after {
      content: "";
      width: 22px;
      height: 22px;
      background-color: #22318e;
      clip-path: polygon(0 50%, 100% 100%, 100% 0); }

.banner {
  display: block; }
  .banner__img {
    width: 100%;
    height: auto; }
    @media only screen and (max-width: 1365px) {
      .banner__img {
        width: auto; } }

.bottom-nav {
  display: grid;
  list-style: none;
  padding: 0;
  grid-template-columns: repeat(3, 1fr);
  background-color: #0078bf;
  padding: 20px 40px;
  gap: 30px; }
  @media only screen and (max-width: 767px) {
    .bottom-nav {
      display: block; } }
  .bottom-nav__link {
    display: block;
    font-size: 18px;
    font-weight: 900;
    text-decoration: none;
    color: #fff;
    padding: 12px 0; }
    .bottom-nav__link:hover {
      text-decoration: underline; }

.pagination {
  text-align: center;
  margin-bottom: 50px; }
  .pagination .page-numbers {
    color: #09256F;
    padding: 10px;
    text-decoration: none; }
  .pagination .current {
    color: #000;
    text-decoration: none; }
  .pagination a.page-numbers:hover {
    text-decoration: underline; }

footer {
  font-size: 14px;
  font-weight: 300;
  text-align: center;
  text-align: center;
  padding: 20px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
